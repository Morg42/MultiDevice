%YAML 1.1
---
# vim: expandtab:ts=4:sw=4
server:

    read:
        type: bool
        enforce_updates: true
        md_device: DEVICENAME
        md_read_group_trigger: server

    listenmode:
        type: bool
        md_device: DEVICENAME
        md_command: server.listenmode
        md_read: true
        md_write: true
        visu_acl: rw

    playercount:
        type: num
        md_device: DEVICENAME
        md_command: server.playercount
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['server']

    favoritescount:
        type: num
        md_device: DEVICENAME
        md_command: server.favoritescount
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['server']

database:

    read:
        type: bool
        enforce_updates: true
        md_device: DEVICENAME
        md_read_group_trigger: database

    rescan:

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: database.rescan

        start:
            type: str
            md_device: DEVICENAME
            md_command: database.rescan.start
            md_read: false
            md_write: true
            visu_acl: rw

        running:
            type: bool
            md_device: DEVICENAME
            md_command: database.rescan.running
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['database', 'database.rescan']

        progress:
            type: str
            md_device: DEVICENAME
            md_command: database.rescan.progress
            md_read: true
            md_write: false
            visu_acl: ro

        runningtime:
            type: str
            md_device: DEVICENAME
            md_command: database.rescan.runningtime
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['database', 'database.rescan']

        fail:
            type: str
            md_device: DEVICENAME
            md_command: database.rescan.fail
            md_read: true
            md_write: false
            visu_acl: ro

        abortscan:
            type: bool
            md_device: DEVICENAME
            md_command: database.rescan.abortscan
            md_read: true
            md_write: true
            visu_acl: rw

        wipecache:
            type: bool
            md_device: DEVICENAME
            md_command: database.rescan.wipecache
            md_read: false
            md_write: true
            visu_acl: rw

    totalgenres:
        type: num
        md_device: DEVICENAME
        md_command: database.totalgenres
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['database']

    totalduration:
        type: num
        md_device: DEVICENAME
        md_command: database.totalduration
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['database']

    totalartists:
        type: num
        md_device: DEVICENAME
        md_command: database.totalartists
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['database']

    totalalbums:
        type: num
        md_device: DEVICENAME
        md_command: database.totalalbums
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['database']

    totalsongs:
        type: num
        md_device: DEVICENAME
        md_command: database.totalsongs
        md_read: true
        md_write: false
        visu_acl: ro
        md_read_group: ['database']

player:

    read:
        type: bool
        enforce_updates: true
        md_device: DEVICENAME
        md_read_group_trigger: player

    control:

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: player.control

        power:
            type: bool
            md_device: DEVICENAME
            md_command: player.control.power
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        playmode:
            type: str
            md_device: DEVICENAME
            md_command: player.control.playmode
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        playpause:
            type: bool
            md_device: DEVICENAME
            md_command: player.control.playpause
            md_read: true
            md_write: true
            visu_acl: rw

        stop:
            type: bool
            md_device: DEVICENAME
            md_command: player.control.stop
            md_read: true
            md_write: true
            visu_acl: rw

        mute:
            type: bool
            md_device: DEVICENAME
            md_command: player.control.mute
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        volume:
            type: num
            md_device: DEVICENAME
            md_command: player.control.volume
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        volume_low:
            type: num
            md_device: DEVICENAME
            md_command: player.control.volume_low
            md_read: false
            md_write: true
            visu_acl: rw
            cache: true
            enforce_updates: true
            initial_value: 60

        volume_high:
            type: num
            md_device: DEVICENAME
            md_command: player.control.volume_high
            md_read: false
            md_write: true
            visu_acl: rw
            cache: true
            enforce_updates: true
            initial_value: 80

        volumeup:
            type: num
            md_device: DEVICENAME
            md_command: player.control.volumeup
            md_read: false
            md_write: true
            visu_acl: rw
            cache: true
            enforce_updates: true
            initial_value: 1

        volumedown:
            type: num
            md_device: DEVICENAME
            md_command: player.control.volumedown
            md_read: false
            md_write: true
            visu_acl: rw
            cache: true
            enforce_updates: true
            initial_value: 1

        alarm:
            type: str
            md_device: DEVICENAME
            md_command: player.control.alarm
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        sync:
            type: str
            md_device: DEVICENAME
            md_command: player.control.sync
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        unsync:
            type: bool
            md_device: DEVICENAME
            md_command: player.control.unsync
            md_read: false
            md_write: true
            visu_acl: rw

        display:
            type: str
            md_device: DEVICENAME
            md_command: player.control.display
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control']

        connect:
            type: str
            md_device: DEVICENAME
            md_command: player.control.connect
            md_read: true
            md_write: true
            visu_acl: rw

        disconnect:
            type: str
            md_device: DEVICENAME
            md_command: player.control.disconnect
            md_read: true
            md_write: true
            visu_acl: rw

        time:
            type: num
            md_device: DEVICENAME
            md_command: player.control.time
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.control', 'player.control.time_poll']
            enforce_updates: true

            poll:
                type: bool
                eval: True if sh....playmode() == "play" else None
                enforce_updates: true
                cycle: 10 = True
                md_device: DEVICENAME
                md_read_group_trigger: player.control.time_poll

        forward:
            type: num
            md_device: DEVICENAME
            md_command: player.control.forward
            md_read: false
            md_write: true
            visu_acl: rw
            enforce_updates: true
            initial_value: 10

        rewind:
            type: num
            md_device: DEVICENAME
            md_command: player.control.rewind
            md_read: false
            md_write: true
            visu_acl: rw
            enforce_updates: true
            initial_value: 10

    playlist:

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: player.playlist

        repeat:
            type: num
            md_device: DEVICENAME
            md_command: player.playlist.repeat
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.playlist']
            remark: 0 = Off, 1 = Song, 2 = Playlist

            lookup:
                type: list
                md_device: DEVICENAME
                md_lookup: REPEAT#list

        shuffle:
            type: num
            md_device: DEVICENAME
            md_command: player.playlist.shuffle
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.playlist']
            remark: 0 = Off, 1 = Song, 2 = Album

            lookup:
                type: list
                md_device: DEVICENAME
                md_lookup: SHUFFLE#list

        index:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.index
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.playlist']

        name:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.name
            md_read: true
            md_write: true
            visu_acl: rw
            md_read_group: ['player', 'player.playlist']

        id:
            type: num
            md_device: DEVICENAME
            md_command: player.playlist.id
            md_read: true
            md_write: true
            visu_acl: rw

        save:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.save
            md_read: true
            md_write: true
            visu_acl: rw

        load:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.load
            md_read: true
            md_write: true
            visu_acl: rw

        loadalbum:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.loadalbum
            md_read: true
            md_write: true
            visu_acl: rw

        loadtracks:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.loadtracks
            md_read: true
            md_write: true
            visu_acl: rw

        add:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.add
            md_read: true
            md_write: true
            visu_acl: rw

        addalbum:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.addalbum
            md_read: true
            md_write: true
            visu_acl: rw

        addtracks:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.addtracks
            md_read: true
            md_write: true
            visu_acl: rw

        insertalbum:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.insertalbum
            md_read: true
            md_write: true
            visu_acl: rw

        inserttracks:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.inserttracks
            md_read: true
            md_write: true
            visu_acl: rw

        tracks:
            type: num
            md_device: DEVICENAME
            md_command: player.playlist.tracks
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.playlist']

        clear:
            type: bool
            md_device: DEVICENAME
            md_command: player.playlist.clear
            md_read: true
            md_write: true
            visu_acl: rw
            enforce_updates: true
            eval: True if value else None

        delete:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.delete
            md_read: true
            md_write: true
            visu_acl: rw

        deleteitem:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.deleteitem
            md_read: true
            md_write: true
            visu_acl: rw

        deletealbum:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.deletealbum
            md_read: true
            md_write: true
            visu_acl: rw

        preview:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.preview
            md_read: true
            md_write: true
            visu_acl: rw

        next:
            type: num
            md_device: DEVICENAME
            md_command: player.playlist.next
            md_read: false
            md_write: true
            visu_acl: rw
            enforce_updates: true
            initial_value: 1

        previous:
            type: num
            md_device: DEVICENAME
            md_command: player.playlist.previous
            md_read: false
            md_write: true
            visu_acl: rw
            enforce_updates: true
            initial_value: 1

        customskip:
            type: str
            md_device: DEVICENAME
            md_command: player.playlist.customskip
            md_read: false
            md_write: true
            visu_acl: rw
            cache: true

    info:

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: player.info

        connected:
            type: bool
            md_device: DEVICENAME
            md_command: player.info.connected
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        name:
            type: str
            md_device: DEVICENAME
            md_command: player.info.name
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        sleep:
            type: num
            md_device: DEVICENAME
            md_command: player.info.sleep
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        alarms:
            type: str
            md_device: DEVICENAME
            md_command: player.info.alarms
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        syncgroups:
            type: num
            md_device: DEVICENAME
            md_command: player.info.syncgroups
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        signalstrength:
            type: num
            md_device: DEVICENAME
            md_command: player.info.signalstrength
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        genre:
            type: str
            md_device: DEVICENAME
            md_command: player.info.genre
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        artist:
            type: str
            md_device: DEVICENAME
            md_command: player.info.artist
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        album:
            type: str
            md_device: DEVICENAME
            md_command: player.info.album
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']
            md_read_initial: true

        title:
            type: str
            md_device: DEVICENAME
            md_command: player.info.title
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        path:
            type: str
            md_device: DEVICENAME
            md_command: player.info.path
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        duration:
            type: num
            md_device: DEVICENAME
            md_command: player.info.duration
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['player', 'player.info']

        albumarturl:
            type: str
            md_device: DEVICENAME
            md_command: player.info.albumarturl
            md_read: true
            md_write: false
            visu_acl: ro

ALL:

    player:

        control:

            time:
                type: num
                md_device: DEVICENAME
                md_command: player.control.time
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control', 'player.control.time_poll']
                enforce_updates: true

                poll:
                    type: bool
                    enforce_updates: true
                    md_device: DEVICENAME
                    md_read_group_trigger: player.control.time_poll
                    eval: True if sh....playmode() == "play" else None
                    cycle: 10 = True

            read:
                type: bool
                enforce_updates: true
                md_device: DEVICENAME
                md_read_group_trigger: ALL.player.control

            power:
                type: bool
                md_device: DEVICENAME
                md_command: player.control.power
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            playmode:
                type: str
                md_device: DEVICENAME
                md_command: player.control.playmode
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            playpause:
                type: bool
                md_device: DEVICENAME
                md_command: player.control.playpause
                md_read: true
                md_write: true
                visu_acl: rw

            stop:
                type: bool
                md_device: DEVICENAME
                md_command: player.control.stop
                md_read: true
                md_write: true
                visu_acl: rw

            mute:
                type: bool
                md_device: DEVICENAME
                md_command: player.control.mute
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            volume:
                type: num
                md_device: DEVICENAME
                md_command: player.control.volume
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            volume_low:
                type: num
                md_device: DEVICENAME
                md_command: player.control.volume_low
                md_read: false
                md_write: true
                visu_acl: rw
                cache: true
                enforce_updates: true
                initial_value: 60

            volume_high:
                type: num
                md_device: DEVICENAME
                md_command: player.control.volume_high
                md_read: false
                md_write: true
                visu_acl: rw
                cache: true
                enforce_updates: true
                initial_value: 80

            volumeup:
                type: num
                md_device: DEVICENAME
                md_command: player.control.volumeup
                md_read: false
                md_write: true
                visu_acl: rw
                cache: true
                enforce_updates: true
                initial_value: 1

            volumedown:
                type: num
                md_device: DEVICENAME
                md_command: player.control.volumedown
                md_read: false
                md_write: true
                visu_acl: rw
                cache: true
                enforce_updates: true
                initial_value: 1

            alarm:
                type: str
                md_device: DEVICENAME
                md_command: player.control.alarm
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            sync:
                type: str
                md_device: DEVICENAME
                md_command: player.control.sync
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            unsync:
                type: bool
                md_device: DEVICENAME
                md_command: player.control.unsync
                md_read: false
                md_write: true
                visu_acl: rw

            display:
                type: str
                md_device: DEVICENAME
                md_command: player.control.display
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.control']

            connect:
                type: str
                md_device: DEVICENAME
                md_command: player.control.connect
                md_read: true
                md_write: true
                visu_acl: rw

            disconnect:
                type: str
                md_device: DEVICENAME
                md_command: player.control.disconnect
                md_read: true
                md_write: true
                visu_acl: rw

            forward:
                type: num
                md_device: DEVICENAME
                md_command: player.control.forward
                md_read: false
                md_write: true
                visu_acl: rw
                enforce_updates: true
                initial_value: 10

            rewind:
                type: num
                md_device: DEVICENAME
                md_command: player.control.rewind
                md_read: false
                md_write: true
                visu_acl: rw
                enforce_updates: true
                initial_value: 10

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: ALL.player

        playlist:

            read:
                type: bool
                enforce_updates: true
                md_device: DEVICENAME
                md_read_group_trigger: ALL.player.playlist

            repeat:
                type: num
                md_device: DEVICENAME
                md_command: player.playlist.repeat
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.playlist']
                remark: 0 = Off, 1 = Song, 2 = Playlist

                lookup:
                    type: list
                    md_device: DEVICENAME
                    md_lookup: REPEAT#list

            shuffle:
                type: num
                md_device: DEVICENAME
                md_command: player.playlist.shuffle
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.playlist']
                remark: 0 = Off, 1 = Song, 2 = Album

                lookup:
                    type: list
                    md_device: DEVICENAME
                    md_lookup: SHUFFLE#list

            index:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.index
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.playlist']

            name:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.name
                md_read: true
                md_write: true
                visu_acl: rw
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.playlist']

            id:
                type: num
                md_device: DEVICENAME
                md_command: player.playlist.id
                md_read: true
                md_write: true
                visu_acl: rw

            save:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.save
                md_read: true
                md_write: true
                visu_acl: rw

            load:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.load
                md_read: true
                md_write: true
                visu_acl: rw

            loadalbum:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.loadalbum
                md_read: true
                md_write: true
                visu_acl: rw

            loadtracks:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.loadtracks
                md_read: true
                md_write: true
                visu_acl: rw

            add:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.add
                md_read: true
                md_write: true
                visu_acl: rw

            addalbum:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.addalbum
                md_read: true
                md_write: true
                visu_acl: rw

            addtracks:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.addtracks
                md_read: true
                md_write: true
                visu_acl: rw

            insertalbum:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.insertalbum
                md_read: true
                md_write: true
                visu_acl: rw

            inserttracks:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.inserttracks
                md_read: true
                md_write: true
                visu_acl: rw

            tracks:
                type: num
                md_device: DEVICENAME
                md_command: player.playlist.tracks
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.playlist']

            clear:
                type: bool
                md_device: DEVICENAME
                md_command: player.playlist.clear
                md_read: true
                md_write: true
                visu_acl: rw
                enforce_updates: true
                eval: True if value else None

            delete:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.delete
                md_read: true
                md_write: true
                visu_acl: rw

            deleteitem:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.deleteitem
                md_read: true
                md_write: true
                visu_acl: rw

            deletealbum:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.deletealbum
                md_read: true
                md_write: true
                visu_acl: rw

            preview:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.preview
                md_read: true
                md_write: true
                visu_acl: rw

            next:
                type: num
                md_device: DEVICENAME
                md_command: player.playlist.next
                md_read: false
                md_write: true
                visu_acl: rw
                enforce_updates: true
                initial_value: 1

            previous:
                type: num
                md_device: DEVICENAME
                md_command: player.playlist.previous
                md_read: false
                md_write: true
                visu_acl: rw
                enforce_updates: true
                initial_value: 1

            customskip:
                type: str
                md_device: DEVICENAME
                md_command: player.playlist.customskip
                md_read: false
                md_write: true
                visu_acl: rw
                cache: true

        info:

            read:
                type: bool
                enforce_updates: true
                md_device: DEVICENAME
                md_read_group_trigger: ALL.player.info

            connected:
                type: bool
                md_device: DEVICENAME
                md_command: player.info.connected
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            name:
                type: str
                md_device: DEVICENAME
                md_command: player.info.name
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            sleep:
                type: num
                md_device: DEVICENAME
                md_command: player.info.sleep
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            alarms:
                type: str
                md_device: DEVICENAME
                md_command: player.info.alarms
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            syncgroups:
                type: num
                md_device: DEVICENAME
                md_command: player.info.syncgroups
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            signalstrength:
                type: num
                md_device: DEVICENAME
                md_command: player.info.signalstrength
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            genre:
                type: str
                md_device: DEVICENAME
                md_command: player.info.genre
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            artist:
                type: str
                md_device: DEVICENAME
                md_command: player.info.artist
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            album:
                type: str
                md_device: DEVICENAME
                md_command: player.info.album
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']
                md_read_initial: true

            title:
                type: str
                md_device: DEVICENAME
                md_command: player.info.title
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            path:
                type: str
                md_device: DEVICENAME
                md_command: player.info.path
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            duration:
                type: num
                md_device: DEVICENAME
                md_command: player.info.duration
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.player', 'ALL.player.info']

            albumarturl:
                type: str
                md_device: DEVICENAME
                md_command: player.info.albumarturl
                md_read: true
                md_write: false
                visu_acl: ro

    read:
        type: bool
        enforce_updates: true
        md_device: DEVICENAME
        md_read_group_trigger: ALL

    server:

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: ALL.server

        listenmode:
            type: bool
            md_device: DEVICENAME
            md_command: server.listenmode
            md_read: true
            md_write: true
            visu_acl: rw

        playercount:
            type: num
            md_device: DEVICENAME
            md_command: server.playercount
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.server']

        favoritescount:
            type: num
            md_device: DEVICENAME
            md_command: server.favoritescount
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.server']

    database:

        read:
            type: bool
            enforce_updates: true
            md_device: DEVICENAME
            md_read_group_trigger: ALL.database

        rescan:

            read:
                type: bool
                enforce_updates: true
                md_device: DEVICENAME
                md_read_group_trigger: ALL.database.rescan

            start:
                type: str
                md_device: DEVICENAME
                md_command: database.rescan.start
                md_read: false
                md_write: true
                visu_acl: rw

            running:
                type: bool
                md_device: DEVICENAME
                md_command: database.rescan.running
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.database', 'ALL.database.rescan']

            progress:
                type: str
                md_device: DEVICENAME
                md_command: database.rescan.progress
                md_read: true
                md_write: false
                visu_acl: ro

            runningtime:
                type: str
                md_device: DEVICENAME
                md_command: database.rescan.runningtime
                md_read: true
                md_write: false
                visu_acl: ro
                md_read_group: ['ALL', 'ALL.database', 'ALL.database.rescan']

            fail:
                type: str
                md_device: DEVICENAME
                md_command: database.rescan.fail
                md_read: true
                md_write: false
                visu_acl: ro

            abortscan:
                type: bool
                md_device: DEVICENAME
                md_command: database.rescan.abortscan
                md_read: true
                md_write: true
                visu_acl: rw

            wipecache:
                type: bool
                md_device: DEVICENAME
                md_command: database.rescan.wipecache
                md_read: false
                md_write: true
                visu_acl: rw

        totalgenres:
            type: num
            md_device: DEVICENAME
            md_command: database.totalgenres
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.database']

        totalduration:
            type: num
            md_device: DEVICENAME
            md_command: database.totalduration
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.database']

        totalartists:
            type: num
            md_device: DEVICENAME
            md_command: database.totalartists
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.database']

        totalalbums:
            type: num
            md_device: DEVICENAME
            md_command: database.totalalbums
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.database']

        totalsongs:
            type: num
            md_device: DEVICENAME
            md_command: database.totalsongs
            md_read: true
            md_write: false
            visu_acl: ro
            md_read_group: ['ALL', 'ALL.database']

